Standard Binary Tree
        |-------1-------|
    |---2---|       |---3---|
    4       5       6       7


1.  Perform preorder, inorder, postorder traversal of a Binary Tree by using recursion and
    iteration.

2*. Perform a breadth first traversal of a Binary Tree using and without using extra space.

3.  Find a maximum element in a binary tree.

4.  Search an element in a Binary Tree.

5.  Find a size of Binary Tree (total no of nodes in a tree).

6.  Delete a binary tree.

7.  Printing the level order data in reverse order. Meaning for a standard tree, the output
    should be 4567231

8.  Find a height of a binary tree.

9.  Find a deepest node of a binary tree.

10. Delete an element from a Binary Tree.

11. Find number of leaves, full nodes, half nodes in a Binary Tree.

12. Given two trees, check if they are 1.identical 2.mirrors. 3.isomorphic 4. quasi-isomorphic

13. Find the diameter(width) of a Binary Tree. Diameter of a tree is the distance between
    the two farthest leaves. To get the more details of the width of a tree,
    check https://www.geeksforgeeks.org/diameter-of-a-binary-tree/

14. Find a level that has maximum sum in a Binary Tree.

15. Print all the root to leaf path of a Binary Tree.

16. Check existence of a path with given sum. Meaning given a sum, there should exits a path
    from root to any leaf such that the sum of their nodes must be equal to the given sum.

17. Find sum of all the elements of a Binary Tree.

18. Convert Binary Tree to its mirror.

19. Construct a tree from inorder and pre-order traversals.
    Eg: Inorder: D B E A F C
        Preorder: A B D E C F

20. Given two travel sequences, can we construct a binary tree.

21. For a given node, print all the ancestors of a node in a Binary Tree.

22. Find a Lowest Common Ancestor of two given nodes in Binary Tree.

23. Traverse a Binary Tree in zig-zag fashion. Our standard Binary Tree should be printed as
    1 3 2 4 5 6 7

24. Find vertical sum of a Binary Tree.

25. How many different Binary Trees are possible with 'n' nodes.

26. Given a tree where leaves are represented by 0 and internal nodes by 1, assuming that
    each node has either 0 or 2 children, create a tree given its pre-order traversal.
    Eg: 10100 should create a tree as follows.
             1
         0      1
               0 0

27. Given a Binary Tree with three pointers: left, right and nextSibling. Point nextSibling
    pointer to its siblings assuming that they are all null in the beginning. For our
    standard tree, the next sibling pointer would be as follows:

    1 -> N
    2 -> 3
    3 -> N
    4 -> 5
    5 -> 6
    6 -> 7
    7 -> N

28. Construct a tree from inorder and post-order traversals.
    Inorder:    D B E A F C G
    Postorder:  D E B F G C A

29. Construct a tree from inorder and level-order traverals.

30. Print Postorder traversal from given Inorder and Preorder traversals

31. Replace each node in binary tree with the sum of its inorder predecessor and
    successor.

32. Given a binary tree and a node, we need to write a program to find inorder successor
    of this node.

33. For a full binary tree, print the level order traversal as:
    1 2 3 4 7 5 6 8 15 9 14 10 13 11 12
    https://www.geeksforgeeks.org/perfect-binary-tree-specific-level-order-traversal/
    Hint: The tree is a perfect binary tree (full binary tree).

34. For a full binary tree, print the level order traversal in bottom up approach as:
    8 15 9 14 10 13 11 12 4 7 5 6 2 3 1
    https://www.geeksforgeeks.org/perfect-binary-tree-specific-level-order-traversal-set-2/
    Asked in Amazon.

35. Reverse alternate levels of a perfect binary tree.
    https://www.geeksforgeeks.org/reverse-alternate-levels-binary-tree/
    Its not printing the alternate level but changing the tree structure.

36. Perform post order traversal using only one stack.

37. Given a Binary Tree, print all diagonal elements in a binary tree belonging to
    same line.
    https://www.geeksforgeeks.org/diagonal-traversal-of-binary-tree/

38. Print the boundary of a tree. For our standard tree, the output should be
    1,2,4,5,6,7,3

39. Given a Binary Tree, find density of it by doing one traversal of it.
    Density of Binary Tree = Size / Height

40. Given a pre-order traversal of a full binary tree where 0 denotes leaf and 1
    denotes node. Find the height.
    Eg: 10100 = 2 and 1011000 = 3

41. Given a binary tree. Modify it in such a way that after modification you can
    have a preorder traversal of it using only the right pointers. During
    modification, you can use right pointer as well as left pointers.

42. Given an array of elements, construct a binary tree in level order fashion.
    Eg, arr[] = 1,2,3,4,5,6 then BT should be constructed such that its level
    order is also the same.

43. Create a Full Tree from preorder and postorder traversal.

44. Create Full Tree from pre-order traversal of a tree and pre-order traversal of a
    mirror of the tree.

45. Construct a tree from ancestor matrix.
    Given matrix:
        0 1 1
        0 0 0
        0 0 0

    The tree can be:
         0   or   0
       1   2     2   1

    Any answer is fine.
    https://www.geeksforgeeks.org/construct-tree-from-ancestor-matrix/

46. Give a tree, construct an ancestor matrix. Reverse of the above problem.
    https://www.geeksforgeeks.org/construct-ancestor-matrix-from-a-given-binary-tree/

47. Given Inorder Traversal of a Special Binary Tree in which key of every node is
    greater than keys in left and right children, construct the Binary Tree and return
    root. https://www.geeksforgeeks.org/construct-binary-tree-from-inorder-traversal/

48. Given an array that represents a tree in such a way that array indexes are values in
    tree nodes and array values give the parent node of that particular index (or node).
    The value of the root node index would always be -1 as there is no parent for root.
    Construct the standard linked representation of given Binary Tree
    https://www.geeksforgeeks.org/construct-a-binary-tree-from-parent-array-representation/

49. Given a ternary tree (left, mid and right pointers), create a doubly linked list such
    that the left pointer should as a prev pointer, right pointer should act as next
    pointer and mid should point to null.
    https://www.geeksforgeeks.org/create-doubly-linked-list-ternary-ree/

50. Convert a binary tree to Doubly Linked List such that the left pointer acts as a prev
    and right pointer acts as next. The order of nodes in DLL must be same as Inorder of
    the given Binary Tree.
    https://www.geeksforgeeks.org/in-place-convert-a-given-binary-tree-to-doubly-linked
    -list/

51. Given a simple Binary Tree, modify it such that a node holds the sum of its two child.

52. Replace a node by sum of its left and right subtrees but the node has to be replaced as
    explained.
    https://www.geeksforgeeks.org/convert-a-given-tree-to-sum-tree/

53. Given a BT, replace a node by the sum of all the nodes in its left subtree.
    https://www.geeksforgeeks.org/change-a-binary-tree-so-that-every-node-stores-
    sum-of-all-nodes-in-left-subtree/

54. Convert a tree into DLL in a spiral fashion.
    https://www.geeksforgeeks.org/convert-a-binary-tree-into-doubly-linked-list-in-spiral
    -fashion/

55. Check if two nodes are cousins. Two nodes are cousins if they are in the same level
    but have different parents.

56. Given a Binary Tree, find if there exist edge whose removal creates two trees of
    equal size.
    https://www.geeksforgeeks.org/check-if-removing-an-edge-can-divide-a-binary-tree-in
    -two-halves/

57. Check if given Preorder, Inorder and Postorder traversals are of same tree.

58. Check if a binary tree is subtree of another binary tree

59. Given a Binary Tree, check whether the Binary tree contains a duplicate sub-tree of
    size 2 or more.
    https://www.geeksforgeeks.org/check-binary-tree-contains-duplicate-subtrees-size-2/

60. Given a binary tree and an array, the task is to find if the given array sequence is
    present as a root to leaf path in given tree.
    https://www.geeksforgeeks.org/check-root-leaf-path-given-sequence/

61. Given a perfect binary tree, print nodes of middle level without computing its
    height. A perfect binary tree is a binary tree in which all interior nodes have two
    children and all leaves have the same depth or same level.
    https://www.geeksforgeeks.org/print-middle-level-perfect-binary-tree-without-finding
    -height/

62. Given a binary tree and a node, print all cousins of given node. Note that siblings
    should not be printed.

63. Print the longest leaf to leaf path in a Binary tree.

64. Given a positive integer L which represents the number of levels in a perfect binary
    tree. Given that the leaf nodes in this perfect binary tree are numbered starting
    from 1 to n, where n is the number of leaf nodes. And the parent node is the sum of
    the two child nodes. Our task is to write a program to print the sum of all of the
    nodes of this perfect binary tree.
    https://www.geeksforgeeks.org/find-sum-nodes-given-perfect-binary-tree/

65. Given a binary tree, a complete path is defined as a path from root to a leaf. The
    sum of all nodes on that path is defined as the sum of that path. Given a number K,
    you have to remove (prune the tree) all nodes which donâ€™t lie in any path with sum>=k.
    https://www.geeksforgeeks.org/remove-all-nodes-which-lie-on-a-path-having-sum-less
    -than-k/

66. A binary tree and a number k are given. Print every path in the tree with sum of the
    nodes in the path as k. A path can start from any node and end at any node and must be
    downward only, i.e. they need not be root node and leaf node; and negative numbers can
    also be there in the tree.
    https://www.geeksforgeeks.org/print-k-sum-paths-binary-tree/

67. Merge two binary nodes such that if two nodes overlap, then sum node values up as the
    new value of the merged node. Otherwise, the non-null node will be used as the node
    of new tree. https://www.geeksforgeeks.org/merge-two-binary-trees-node-sum/
