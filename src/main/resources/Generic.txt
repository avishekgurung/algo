1. Find of spans or finding of next highest element in a list.
    The list here can be an array or linkedlist or any other list. For an element, we need to
    find another element to its right which is higher than the element. If there are multiple
    elements higher than the current one then we choose the first element.

    Ex 1
        arr = {4,5,3,7,8,5,1,2}
        4 -> 5
        5 -> 7
        3 -> 7
        7 -> 8
        8 -> NA
        5 -> NA
        1 -> 2
        2 -> NA

        For element 4, the number that is higher than 4 to the right is 5.
        Like wise, for 5 and 3 its 7.
        For 7 its 8 and for 8 there are no elements higher than 8.

        This question can also be modified for Linked List where they might ask us to point
        the random pointer of a node to the next highest node.

    Ex 2
        arr = {5,10,2,3}
        5 -> 10
        10 -> NA
        2 -> 3
        3 -> NA

    Calculate the time complexity.


2. Processing all the elements of 2D array in a complexity lesser than O(n2).

    Lets say we have a 2D array as follows:
        1 2 3 4
        5 6 7 8
        2 3 4 5
        1 3 4 5
    And we want to process (or traverse) all the elements (say we want to find the sum of all
    the elements). Then the normal traversing will take O(n2). But we can also do it in O(nlogn).

    This question could also be framed for LL, single array etc.
